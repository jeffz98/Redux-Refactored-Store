{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, ADD_TO_CART, UPDATE_CART_QUANTITY, REMOVE_FROM_CART, ADD_MULTIPLE_TO_CART, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, CLEAR_CART, TOGGLE_CART } from './actions';\nconst initialState = {\n  products: [],\n  categories: [],\n  cart: []\n}; // TODO: To get a better understand of how a reducer works - add comments to the various actions in the reducer\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n    // Your comment here\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n\n    case ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.products]\n      };\n    // TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n    // Your comment here\n\n    case UPDATE_CART_QUANTITY:\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n    // TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n    // Your comment here\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // TODO: Add a comment describing what the default case is for\n    // Your comment here\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  _s();\n\n  return useReducer(reducer, initialState);\n}\n\n_s(useProductReducer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","initialState","products","categories","cart","reducer","state","action","type","cartOpen","product","map","_id","purchaseQuantity","newState","filter","length","currentCategory","useProductReducer"],"sources":["/Users/Jeffrey/Desktop/Redux-Refactored-Store/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\nconst initialState = {\n  products: [],\n  categories: [],\n  cart: [],\n  \n}\n\n// TODO: To get a better understand of how a reducer works - add comments to the various actions in the reducer\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n    // Your comment here\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n    // Your comment here\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n    // Your comment here\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // TODO: Add a comment describing what the default case is for\n    // Your comment here\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,uBAPF,EAQEC,UARF,EASEC,WATF,QAUO,WAVP;AAYA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EADS;EAEnBC,UAAU,EAAE,EAFO;EAGnBC,IAAI,EAAE;AAHa,CAArB,C,CAOA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE;IACA;IACA,KAAKhB,eAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELJ,QAAQ,EAAE,CAAC,GAAGK,MAAM,CAACL,QAAX;MAFL,CAAP;;IAKF,KAAKT,WAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELG,QAAQ,EAAE,IAFL;QAGLL,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;MAHD,CAAP;;IAMF,KAAKd,oBAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgB,GAAGG,MAAM,CAACL,QAA1B;MAFD,CAAP;IAIF;IACA;;IACA,KAAKR,oBAAL;MACE,OAAO,EACL,GAAGY,KADE;QAELG,QAAQ,EAAE,IAFL;QAGLL,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWO,GAAX,CAAgBD,OAAD,IAAa;UAChC,IAAIH,MAAM,CAACK,GAAP,KAAeF,OAAO,CAACE,GAA3B,EAAgC;YAC9BF,OAAO,CAACG,gBAAR,GAA2BN,MAAM,CAACM,gBAAlC;UACD;;UACD,OAAOH,OAAP;QACD,CALK;MAHD,CAAP;IAWF;IACA;;IACA,KAAKf,gBAAL;MACE,IAAImB,QAAQ,GAAGR,KAAK,CAACF,IAAN,CAAWW,MAAX,CAAmBL,OAAD,IAAa;QAC5C,OAAOA,OAAO,CAACE,GAAR,KAAgBL,MAAM,CAACK,GAA9B;MACD,CAFc,CAAf;MAIA,OAAO,EACL,GAAGN,KADE;QAELG,QAAQ,EAAEK,QAAQ,CAACE,MAAT,GAAkB,CAFvB;QAGLZ,IAAI,EAAEU;MAHD,CAAP;;IAMF,KAAKf,UAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELG,QAAQ,EAAE,KAFL;QAGLL,IAAI,EAAE;MAHD,CAAP;;IAMF,KAAKJ,WAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELG,QAAQ,EAAE,CAACH,KAAK,CAACG;MAFZ,CAAP;;IAKF,KAAKZ,iBAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELH,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACJ,UAAX;MAFP,CAAP;;IAKF,KAAKL,uBAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELW,eAAe,EAAEV,MAAM,CAACU;MAFnB,CAAP;IAKF;IACA;;IACA;MACE,OAAOX,KAAP;EA5EJ;AA8ED,CA/EM;AAiFP,OAAO,SAASY,iBAAT,CAA2BjB,YAA3B,EAAyC;EAAA;;EAC9C,OAAOV,UAAU,CAACc,OAAD,EAAUJ,YAAV,CAAjB;AACD;;GAFeiB,iB"},"metadata":{},"sourceType":"module"}